#!/bin/bash -xv

exec &> >(tee /config/logs/organise-$1.log)

date
whoami
export

sonarSocket="127.0.0.1:8989"
sonarKey="$SONARR_KEY"
radarrSocket="127.0.0.1:7878"
radarrKey="$RADARR_KEY"
torrentid=$1
torrentname=$2
torrentpath=$3

if [ "$torrentid" == "" ]; then
  if [ ! -f "failed.log" ]; then
    touch failed.log
  fi
  echo "Failed: $torrentid $torrentname $torrentpath" >> failed.log
  exit 1
fi

unsortedFormat="/downloads/unsorted/{file.name}"
seriesFormat="/tv/{n}/{'Season '+s}/{n} - {sxe} - {t}"
movieFormat="/movies/{n} ({y})/{n} ({y})"

amclog="/config/logs/amc.log"
amcexclude="/config/logs/amc.txt"
logfile="/config/logs/organise-$torrentid.log"

echo -e "\n"
echo -e "Login to deluge"
echo -e "===============\n"
curl -c cookies.txt --compressed -i -H "Content-Type: application/json" -H "Accept: application/json" -X POST -d "{\"method\": \"auth.login\", \"params\": [\"$DELUGE_PASSWORD\"], \"id\": 1}" http://127.0.0.1:8112/json >/dev/null 2>&1

echo -e "\n"
echo -e "Connect to deluge web"
echo -e "=====================\n"
curl -v -b /config/cookies.txt --compressed -i -H "Content-Type: application/json" -H "Accept: application/json" -d '{"method": "web.connected", "params": [], "id": 1}' http://127.0.0.1:8112/json 2>&1

echo -e "\n"
echo -e "Get torrent label"
echo -e "=================\n"
torrentlabel=$(curl -v -b /config/cookies.txt --compressed -i -H "Content-Type: application/json" -H "Accept: application/json" -d '{"method": "core.get_torrent_status", "params": ["'$torrentid'",["label"]], "id": 1}' http://127.0.0.1:8112/json | awk -F\" '{print $6}' | tail -n 1 | tr -d '\n')
echo -e "Label: $torrentlabel"

echo -e "\n"
echo -e "Torrent Details"
echo -e "===============\n"
echo -e "$torrentname $torrentpath $torrentid $torrentlabel\n"

echo -e "\n"
echo -e "Copy to sedmage"
echo -e "===============\n"
cp -rvf "/config/state/$torrentid.torrent" "/config/seedmage/torrents/"
echo "cp -rvf \"/config/state/$torrentid.torrent\" \"/config/seedmage/torrents/\"" 

echo -e "\n"
echo -e "Copy to work directory"
echo -e "======================\n"

mkdir -vp /downloads/work
cp -rvf "$torrentpath/$torrentname" "$torrentpath/work/$torrentname"

echo -e "\n"
echo -e "Filebot\n"
echo -e "=======\n"

if [ "$torrentlabel" == "tv-sonarr" ]; then
  defs="ut_label=TV"
  echo "filebot tv-sonarr" 2>&1
  filebot -script /config/scripts/amc.groovy --output="/tv" -no-xattr --action copy --conflict auto -non-strict --log-file $amclog --log INFO --def ignore="/downloads/temp/" seriesFormat="$seriesFormat" subtitles=en extras=y music=y artwork=y clean=y deleteAfterExtract=y ut_dir="$torrentpath/work/$torrentname" ut_kind="multi" ut_title="$torrentname" $defs 2>&1
elif [ "$torrentlabel" == "radarr" ]; then
  defs="ut_label=Movie"
  echo "filebot radarr" 2>&1
  filebot -script /config/scripts/amc.groovy --output="/movies" -no-xattr --action copy --conflict auto -non-strict --log-file $amclog --log INFO --def ignore="/downloads/temp/" movieFormat="$movieFormat" subtitles=en extras=y music=y artwork=y clean=y deleteAfterExtract=y ut_dir="$torrentpath/work/$torrentname" ut_kind="multi" ut_title="$torrentname" $defs 2>&1
elif [ "$torrentlabel" == "skip" ]; then
  defs=""
  echo "filebot unknown" 2>&1
  filebot -script /config/scripts/amc.groovy --output="/downloads" -no-xattr --action copy --conflict auto -non-strict --log-file $amclog --log INFO --def ignore="/downloads/temp/" movieFormat="$movieFormat" seriesFormat="$seriesFormat" unsortedFormat="$unsortedFormat" unsorted=y subtitles=en extras=y music=y artwork=y clean=y deleteAfterExtract=y ut_dir="$torrentpath/work/$torrentname" ut_kind="multi" ut_title="$torrentname" $defs 2>&1
fi

grep "\[COPY\]" $logfile >/dev/null 2>&1

echo -e "\n"
echo -e "Radarr/Sonarr rescan\n"
echo -e "====================\n"

if [ "$?" == "0" ]; then
  if [ "$torrentlabel" == "tv-sonarr" ]; then
    curl -v http://$sonarSocket/api/command -d '{"name": "RescanSeries"}' --header "X-Api-Key:$sonarKey" 2>&1
  else
    curl -v http://$radarrSocket/api/command -d '{"name": "DownloadedMoviesScan", "path" : ""}' --header "X-Api-Key:$radarrKey" 2>&1
  fi
fi

echo -e "\n"
timeout 30 bash /config/delete_old.sh

echo -e "\n"
timeout 30 bash /config/pause_completed_public_tracker.sh $torrentid
timeout 30 bash /config/pause_completed_public_tracker.sh

echo -e "\n"
echo -e "$SEP"

chmod 666 $logfile

chown -R default /downloads/*
chown -R default /config/*

rm /config/*.bak

rm -rvf "$torrentpath/work/$torrentname"

killall -9 curl

exit 0
